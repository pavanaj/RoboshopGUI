void OpenCB(Fl_Widget* w, void* p)
{
	ifstream read_Orders;
	read_Orders.open("Orders_data.txt");

	ifstream read_Robots;
	read_Robots.open("Robots_data.txt");

	ifstream read_Cust;
	read_Cust.open("Cust_data.txt");

	ifstream read_SA;
	read_SA.open("SA_data.txt");

	ifstream read_PM;
	read_PM.open("PM_data.txt");

	string word;
	double number;

	while (getline(read_Orders, word, '@'))
	{
		O.order_no = word;

		getline(read_Orders, word, '@');
		O.cust_no = word;

		getline(read_Orders, word, '@');
		O.cust_name = word;

		getline(read_Orders, word, '@');
		number = str_to_double(word);
		O.robots_ordered = (int)number;

		getline(read_Orders, word, '@');
		O.sa_name = word;

		getline(read_Orders, word, '@');
		O.sales_date = word;

		getline(read_Orders, word, '@');
		O.model_name = word;

		getline(read_Orders, word, '@');
		number = str_to_double(word);
		O.sub_total = number;

		getline(read_Orders, word, '@');
		number = str_to_double(word);
		O.shipping = number;

		getline(read_Orders, word, '@');
		number = str_to_double(word);
		O.tax = number;

		getline(read_Orders, word, '\n');
		number = str_to_double(word);
		O.net_total = number;

		Orders.push_back(O);
	}

	while (getline(read_Robots, word, '@'))
	{
		//Robot Specs
		R.r_name = word;

		getline(read_Robots, word, '@');
		R.r_no = word;

		getline(read_Robots, word, '@');
		R.description = word;

		getline(read_Robots, word, '@');
		number = str_to_double(word);
		R.r_cost = number;

		getline(read_Robots, word, '@');
		number = str_to_double(word);
		R.r_price = number;

		getline(read_Robots, word, '@');
		number = str_to_double(word);
		R.r_profit = number;

		// Head Specs
		R.head_name = word;

		getline(read_Robots, word, '@');
		R.head_type = word;

		getline(read_Robots, word, '@');
		number = str_to_double(word);
		R.head_cost = number;

		getline(read_Robots, word, '@');
		number = str_to_double(word);
		R.head_weight = number;

		getline(read_Robots, word, '@');
		R.head_partno = word;

		// Torso Specs
		getline(read_Robots, word, '@');
		R.torso_name = word;

		getline(read_Robots, word, '@');
		R.torso_type = word;

		getline(read_Robots, word, '@');
		number = str_to_double(word);
		R.torso_cost = number;

		getline(read_Robots, word, '@');
		number = str_to_double(word);
		R.torso_weight = number;

		getline(read_Robots, word, '@');
		R.torso_partno = word;

		getline(read_Robots, word, '@');
		number = str_to_double(word);
		R.compartments = (int)number;

		// Locomoter Specs
		getline(read_Robots, word, '@');
		R.locomoter_name = word;

		getline(read_Robots, word, '@');
		R.locomoter_type = word;

		getline(read_Robots, word, '@');
		number = str_to_double(word);
		R.locomoter_cost = number;

		getline(read_Robots, word, '@');
		number = str_to_double(word);
		R.locomoter_weight = number;

		getline(read_Robots, word, '@');
		R.locomoter_partno = word;

		getline(read_Robots, word, '@');
		number = str_to_double(word);
		R.max_speed = number;

		getline(read_Robots, word, '@');
		number = str_to_double(word);
		R.power_consumed = number;

		// Battery Specs
		getline(read_Robots, word, '@');
		R.battery_name = word;

		getline(read_Robots, word, '@');
		R.battery_type = word;

		getline(read_Robots, word, '@');
		number = str_to_double(word);
		R.battery_cost = number;

		getline(read_Robots, word, '@');
		number = str_to_double(word);
		R.battery_weight = number;

		getline(read_Robots, word, '@');
		R.battery_partno = word;

		getline(read_Robots, word, '@');
		number = str_to_double(word);
		R.max_power = number;

		getline(read_Robots, word, '@');
		number = str_to_double(word);
		R.energy = number;

		// Arms Specs
		getline(read_Robots, word, '@');
		R.arms_name = word;

		getline(read_Robots, word, '@');
		R.arms_type = word;

		getline(read_Robots, word, '@');
		number = str_to_double(word);
		R.arms_cost = number;

		getline(read_Robots, word, '@');
		number = str_to_double(word);
		R.arms_weight = number;

		getline(read_Robots, word, '@');
		R.arms_partno = word;

		getline(read_Robots, word, '@');
		number = str_to_double(word);
		R.no_of_arms = (int)number;

		getline(read_Robots, word, '\n');
		number = str_to_double(word);
		R.arms_power = number;

		Robots.push_back(R);
	}

	while (getline(read_Cust, word, '@'))
	{
		C.cust_no = word;

		getline(read_Cust, word, '@');
		C.cust_name = word;

		getline(read_Cust, word, '\n');
		C.password = word;

		Customers.push_back(C);
	}

	while (getline(read_SA, word, '@'))
	{
		SA.sa_no = word;

		getline(read_Cust, word, '@');
		SA.sa_name = word;

		getline(read_Cust, word, '\n');
		SA.password = word;

		SalesAssociates.push_back(SA);
	}

	while (getline(read_PM, word, '@'))
	{
		PM.pm_no = word;

		getline(read_Cust, word, '@');
		PM.pm_name = word;

		getline(read_Cust, word, '\n');
		PM.password = word;

		Managers.push_back(PM);
	}
}

void SaveCB(Fl_Widget* w, void* p)
{
	ofstream write_Orders;
	write_Orders.open("Orders_data.txt");

	ofstream write_Robots;
	write_Robots.open("Robots_data.txt");

	ofstream write_Cust;
	write_Cust.open("Cust_data.txt");

	ofstream write_SA;
	write_SA.open("SA_data.txt");

	ofstream write_PM;
	write_PM.open("PM_data.txt");

	for (int i = 0; i < Orders.size(); i++)
	{
		write_Orders << Orders[i].order_no << "@"
			<< Orders[i].cust_no << "@"
			<< Orders[i].cust_name << "@"
			<< Orders[i].robots_ordered << "@"
			<< Orders[i].sa_name << "@"
			<< Orders[i].sales_date << "@"
			<< Orders[i].model_name << "@"
			<< Orders[i].sub_total << "@"
			<< Orders[i].shipping << "@"
			<< Orders[i].tax << "@"
			<< Orders[i].net_total << endl;
	}

	for (int i = 0; i < Robots.size(); i++)
	{
		write_Robots << Robots[i].r_name << "@"
			<< Robots[i].r_no << "@"
			<< Robots[i].description << "@"
			<< Robots[i].r_cost << "@"
			<< Robots[i].r_price << "@"
			<< Robots[i].r_profit << "@" 
			<< Robots[i].head_name << "@"
			<< Robots[i].head_type << "@"
			<< Robots[i].head_cost << "@"
			<< Robots[i].head_weight << "@"
			<< Robots[i].head_partno << "@"
			<< Robots[i].torso_name << "@"
			<< Robots[i].torso_type << "@"
			<< Robots[i].torso_cost << "@"
			<< Robots[i].torso_weight << "@"
			<< Robots[i].torso_partno << "@"
			<< Robots[i].compartments << "@"
			<< Robots[i].locomoter_name << "@"
			<< Robots[i].locomoter_type << "@"
			<< Robots[i].locomoter_cost << "@"
			<< Robots[i].locomoter_weight << "@"
			<< Robots[i].locomoter_partno << "@"
			<< Robots[i].max_speed << "@"
			<< Robots[i].power_consumed << "@"
			<< Robots[i].battery_name << "@"
			<< Robots[i].battery_type << "@"
			<< Robots[i].battery_cost << "@"
			<< Robots[i].battery_weight << "@"
			<< Robots[i].battery_partno << "@"
			<< Robots[i].max_power << "@"
			<< Robots[i].energy << "@"
			<< Robots[i].arms_name << "@"
			<< Robots[i].arms_type << "@"
			<< Robots[i].arms_cost << "@"
			<< Robots[i].arms_weight << "@"
			<< Robots[i].arms_partno << "@"
			<< Robots[i].no_of_arms << "@"
			<< Robots[i].arms_power << endl;
	}

	for (int i = 0; i < Customers.size(); i++)
	{
		write_Cust << Customers[i].cust_no << "@"
			<< Customers[i].cust_name << "@"
			<< Customers[i].password << endl;
	}

	for (int i = 0; i < SalesAssociates.size(); i++)
	{
		write_SA << SalesAssociates[i].sa_no << "@"
			<< SalesAssociates[i].sa_name << "@"
			<< SalesAssociates[i].password << endl;
	}

	for (int i = 0; i < Managers.size(); i++)
	{
		write_PM << Managers[i].pm_no << "@"
			<< Managers[i].pm_name << "@"
			<< Managers[i].password << endl;
	}
}