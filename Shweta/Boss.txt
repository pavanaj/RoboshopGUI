

const char* int_to_string(int value)
{
	stringstream ss;
	ss << value;
	const char* str = ss.str().c_str();
	return str;
}
// for robots_ordered is an integer





void ProfitCB(Fl_Widget* w, void* p)
{

	Fl_Window  *win = new Fl_Window(600, 400, "Profit");
	Fl_Browser *b = new Fl_Browser(10, 10, 500, 300);
	int widths[] = { 50, 50 };
	b->column_widths(widths);
	b->column_char('\t');
	b->type(FL_MULTI_BROWSER);


	const char *one;
	const char *two;
	char *result;

	b->add("Robot Name \t Profit ($)");

	for (int i = 0; i < Robots.size(); i++)
	{
		one = Robots[i].r_name.c_str();
		two = double_to_string(Robots[i].r_profit);
		strcpy(result, one);
		strcat(result, "\t");
		strcat(result, two);
		b->add(result);
		
	}

	win->resizable(b);
	win->end();
	win->show();
	view->redraw();
}


void OrdersCB(Fl_Widget* w, void* p)
{
	Fl_Window  *win = new Fl_Window(900, 700, "Orders");
	Fl_Browser *b = new Fl_Browser(10, 10, 800, 500);
	int widths[] = { 50, 50,50,50,50,50,50 };
	b->column_widths(widths);
	b->column_char('\t');
	b->type(FL_MULTI_BROWSER);

	char *result;
	const char *s1 ;
	const char *s2;
	const char *s3;
	const char *s4;
	const char *s5;
	const char *s6;
	const char *s7;
	b->add("Order No  Cust-Name  Robots-Ordered   SA-Name   Sales-Date \t Model-Name \t Net-Total");
	
	for (int i = 0; i < Orders.size(); i++)
	{
		s1 = Orders[i].order_no.c_str();
		s2 = Orders[i].cust_name.c_str();
		s3 = int_to_string(Orders[i].robots_ordered);
		s4= Orders[i].sa_name.c_str();
		s5= Orders[i].sales_date.c_str();
		s6= Orders[i].model_name.c_str();
		s7 = double_to_string(Orders[i].net_total);
		strcpy(result, s1);
		strcat(result, "\t\t");
		strcat(result, s2);
		strcat(result, "\t\t");
		strcat(result, s3);
		strcat(result, "\t\t  ");
		strcat(result, s4);
		strcat(result, "\t\t");
		strcat(result, s5);
		strcat(result, "\t\t");
		strcat(result, s6);
		strcat(result, "\t\t");
		strcat(result, s7);
		b->add(result);
	}
		win->resizable(b);
		win->end();
		win->show();
		view->redraw();
}