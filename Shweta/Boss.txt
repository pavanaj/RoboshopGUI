
//since Fl_Text_Display displays only text i converted the double and int values to string so that i can show it on the window.
//have not declared them in boss.h as i think they should go in GUI.cpp

string dts(double dbl)
{
	ostringstream strs;
	strs << dbl;
	string str = strs.str();
        return str;
}
string its(int in)
{
	ostringstream strs;
	strs << in;
	string str = strs.str();
	return str;
}

void Boss::OrdersCB(Fl_Widget* w, void* p)
{
	Fl_Window *order = new Fl_Window(900, 550);
	Fl_Text_Buffer *buff = new Fl_Text_Buffer();
	Fl_Text_Display *display = new Fl_Text_Display(20, 20, 900, 550, "ORDERS"); 
	display->buffer(buff);
	order->resizable(*display);
	order->show();
	buff->text("The following is the list of Orders for Robo shop:\n");
	for (int i = 0; i < Orders.size(); i++)
	{
		
		buff->text(Orders[i].order_no);
		buff->text("\t");
		buff->text(Orders[i].cust_name);
		buff->text("\t");
		string s1=its(Orders[i].robots_ordered);
		buff->text(s1);
		buff->text("\t");
		buff->text(Orders[i].sa_name);
		buff->text("\t");
		buff->text(Orders[i].sales_date);
		buff->text("\t");
		buff->text(Orders[i].model_name);
		buff->text("\t");
		string s2=dts(Orders[i].net_total);
		buff->text(s2);
	}
	view->redraw();
}

void Boss::ProfitCB(Fl_Widget* w, void* p)
{
        double pft;
	vector<double> rp;
	Fl_Window *pt = new Fl_Window(900, 550);
	Fl_Text_Buffer *buff = new Fl_Text_Buffer();
	Fl_Text_Display *display = new Fl_Text_Display(20, 20, 900, 550, "PROFITS");
	display->buffer(buff);
	pt->resizable(*display);
	pt->show();
	for (int i = 0; i < Robots.size(); i++)
	{
		for (int j = 1; j < Robots.size(); j++)
		{
			if (Robots[i].r_name == Robots[j].r_name)
			{
				pft = pft + Robots[j].r_profit;
			}
			else
			{
				pft = Robots[i].r_profit;
			}
		}
		rp.push_back(pft);
		
		//buff->text(i);
		buff->text(". Robot Name : ");
		buff->text(Robots[i].r_name);
		buff->text(" Total Profit : ");
		string s=dts(rp[i]);
		buff->text(s);
		buff->text("\n"); 
	}
	view->redraw();
}