string ITS(int value)

{
	
	stringstream ss;
	
	ss << value;
	
	string str = ss.str();
	
	return str;

}

void ProfitCB(Fl_Widget* w, void* p)
{

	Fl_Window  *win = new Fl_Window(600, 400, "Profit");
	Fl_Multiline_Output *BR = new Fl_Multiline_Output(10, 10, win->w() - 20, win->h() - 20);

	
	BR->type(FL_MULTILINE_OUTPUT);
	BR->textfont(FL_COURIER);

	
	string result = "Robot Name \t Profit ($)\n";


	for (int i = 0; i < Robots.size(); i++)
	{
		result += Robots[i].r_name + " \t " + DTS(Robots[i].r_profit) + "\n";
		
	}
	BR->value(result.c_str());
	win->resizable(BR);
	win->end();
	win->show();
	view->redraw();
}


void OrdersCB(Fl_Widget* w, void* p)
{
	Fl_Window  *win = new Fl_Window(1000, 980, "Orders");
	Fl_Multiline_Output *BR = new Fl_Multiline_Output(10, 10, win->w() - 20, win->h() - 20);

	
	BR->type(FL_MULTILINE_OUTPUT);
	BR->textfont(FL_COURIER);

	
	string result = "Order No \tCust-Name \tRobots Ordered \t  SA-Name \t   Sales-Date \t   Model-Name \t\tNet-Total\n";

	
	for (int i = 0; i < Orders.size(); i++)
	{
		result += Orders[i].order_no + "\t\t" + Orders[i].cust_name + "\t\t" + ITS(Orders[i].robots_ordered) + "\t\t" + Orders[i].sa_name + " \t\t" + Orders[i].sales_date + " \t" + Orders[i].model_name + " \t\t" + DTS(Orders[i].net_total) + "\n";

	}
		BR->value(result.c_str());
		win->resizable(BR);
		win->end();
		win->show();
		view->redraw();
}

void ModelSalesCB(Fl_Widget* w, void* p)
{
	Fl_Window  *win = new Fl_Window(600, 400, "Model Sales");
	Fl_Multiline_Output *BR = new Fl_Multiline_Output(10, 10, win->w() - 20, win->h() - 20);

	
	BR->type(FL_MULTILINE_OUTPUT);
	BR->textfont(FL_COURIER);

	
	string result = "Model Name\tRobots Sold\n";

    	int r_sold=0;
	
	
	for (int i = 0; i < Orders.size(); i++)
	{
		r_sold = 0;
		for (int j = 0; j < Orders.size(); j++)
		{
			if (Orders[i].model_name==Orders[j].model_name)
			{
				r_sold = r_sold + Orders[j].robots_ordered;
				
			}
		}
		result +=  Orders[i].model_name + "  \t" + ITS(r_sold) + "\n";

	}
	BR->value(result.c_str());
	win->resizable(BR);
	win->end();
	win->show();
	view->redraw();

}

void SalesReportCB(Fl_Widget* w, void* p)
{
	Fl_Window  *win = new Fl_Window(600, 400, "Sales Report");
	Fl_Multiline_Output *BR = new Fl_Multiline_Output(10, 10, win->w() - 20, win->h() - 20);

	
	BR->type(FL_MULTILINE_OUTPUT);
	BR->textfont(FL_COURIER);


	string result = "Name of Sales Associate \tTotal Sales\n";

	double total_sales = 0;
	string ans;
	double max;
	int index_no;
	int k;

	for (int i = 0; i < Orders.size(); i++)
	{
		total_sales = 0;
		for (int j = 0; j < Orders.size(); j++)
		{
			if (Orders[i].sa_name == Orders[j].sa_name)
			{
				total_sales = total_sales + Orders[j].net_total;
			}
		}
		result += Orders[i].sa_name + "  \t\t\t" + DTS(total_sales) + "\n";
	}

	BR->value(result.c_str());
	win->resizable(BR);
	win->end();
	win->show();
	view->redraw();

}